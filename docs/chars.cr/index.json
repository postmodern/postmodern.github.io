{"repository_name":"chars","body":"# Chars\n\n[![CI](https://github.com/postmodern/chars.cr/actions/workflows/crystal.yml/badge.svg)](https://github.com/postmodern/chars.cr/actions/workflows/crystal.yml)\n\n* [Source](https://github.com/postmodern/chars.cr#readme)\n* [Issues](https://github.com/postmodern/chars.cr/issues)\n* [Documentation](https://postmodern.github.io/docs/chars.cr)\n* [Email](mailto:postmodern.mod3 at gmail.com)\n\n## Description\n\nChars is a [Crystal] library for working with various character sets,\nrecognizing text and generating random text from specific character sets.\nPorted from the [chars.rb] ruby library.\n\n## Features\n\n* Provides character sets for:\n  * Numeric: `0` - `9`\n  * Octal: `0` - `7`\n  * Uppercase Hexadecimal: `0` - `9`, `A` - `F`\n  * Lowercase Hexadecimal: `0` - `9`, `a` - `f`\n  * Hexadecimal: `0` - `9`, `a` - `f`, `A` - `F`\n  * Uppercase Alpha: `A` - `Z`\n  * Lowercase Alpha: `a` - `z`\n  * Alpha: `a` - `z`, `A` - `Z`\n  * Alpha-numeric: `0` - `9`, `a` - `z`, `A` - `Z`\n  * Punctuation: `' '`, `'`, `\"`, `` ` ``, `,`, `;`, `:`, `~`, `-`, `(`, `)`, `[`, `]`, `{`, `}`, `.`, `?`, `!`\n  * Symbols: `' '`, `'`, `\"`, `` ` ``, `,`, `;`, `:`, `~`, `-`, `(`, `)`, `[`, `]`, `{`, `}`, `.`, `?`, `!`, `@`, `#`, `$`, `%`, `^`, `&`, `*`, `_`, `+`, `=`, `|`, `\\`, `<`, `>`, `/`\n  * Space: `' '`, `\\f`, `\\n`, `\\r`, `\\t`, `\\v`\n  * Visible: `0` - `9`, `a` - `z`, `A` - `Z`, `'`, `\"`, `` ` ``, `,`, `;`, `:`, `~`, `-`, `(`, `)`, `[`, `]`, `{`, `}`, `.`, `?`, `!`, `@`, `#`, `$`, `%`, `^`, `&`, `*`, `_`, `+`, `=`, `|`, `\\`, `<`, `>`, `/`\n  * Printable: `0` - `9`, `a` - `z`, `A` - `Z`, `' '`, `'`, `\"`, `` ` ``, `,`, `;`, `:`, `~`, `-`, `(`, `)`, `[`, `]`, `{`, `}`, `.`, `?`, `!`, `@`, `#`, `$`, `%`, `^`, `&`, <code>*</code>, <code>_</code>, `+`, `=`, `|`, `\\`, `<`, `>`, `/`, `\\f`, `\\n`, `\\r`, `\\t`, `\\v`\n  * Control: `\\x00` - `\\x1f`, `\\x7f`\n  * Signed ASCII: `\\x00` - `\\x7f`\n  * ASCII: `\\x00` - `\\xff`\n\n## Examples\n\nDetermine whether a byte belongs to a character set:\n\n    0x41.alpha?\n    # => true\n\nDetermine whether a String belongs to a character set:\n\n    \"22e1c0\".hex?\n    # => true\n\nFind all sub-strings that belong to a character set within a String:\n\n    ls = File.read(\"/bin/ls\")\n    Chars.printable.substrings(ls)\n    # => [\"/lib64/ld-linux-x86-64.so.2\", \"KIq/\", \"5J~!\", \"%L~!\", ...]\n\nReturn a random character from the set of all characters:\n\n    Chars.all.random_char\n    # => \"\\x94\"\n\nReturn a random Array of characters from the alpha-numeric character set:\n\n    Chars.alpha_numeric.random_chars(10)\n    # => [\"Q\", \"N\", \"S\", \"4\", \"x\", \"z\", \"3\", \"M\", \"F\", \"F\"]\n\nReturn a random Array of a random length of unique characters from the\nvisible character set:\n\n    Chars.visible.random_distinct_chars(1..10)\n    # => [\"S\", \"l\", \"o\", \"8\", \"'\", \"q\"]\n\nReturn a random String from the set of all characters:\n\n    Chars.all.random_string(10)\n    # => \"\\xc2h\\xad\\xccm7\\x1e6J\\x13\"\n\nReturn a random String with a random length between 5 and 10, from the\nset of space characters:\n\n    Chars.space.random_string(5..10)\n    # => \"\\r\\v\\n\\t\\n\\f\"\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     chars:\n       github: postmodern/chars.cr\n   ```\n\n2. Run `shards install`\n\n## Contributing\n\n1. Fork it (<https://github.com/postmodern/chars.cr/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Postmodern](https://github.com/postmodern) - creator and maintainer\n\n[Crystal]: https://crystal-lang.org/\n[chars.rb]: https://github.com/postmodern/chars.rb\n","program":{"html_id":"chars/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"chars","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"chars/Chars","path":"Chars.html","kind":"module","full_name":"Chars","name":"Chars","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/chars.cr","line_number":3,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L3"},{"filename":"src/chars/char_set.cr","line_number":1,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L1"}],"repository_name":"chars","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ALPHA","name":"ALPHA","value":"UPPERCASE_ALPHA | LOWERCASE_ALPHA","doc":"The alpha character set","summary":"<p>The alpha character set</p>"},{"id":"ALPHA_NUMERIC","name":"ALPHA_NUMERIC","value":"ALPHA | NUMERIC","doc":"The alpha-numeric character set","summary":"<p>The alpha-numeric character set</p>"},{"id":"ASCII","name":"ASCII","value":"CharSet[0..255]","doc":"The full 8-bit character set","summary":"<p>The full 8-bit character set</p>"},{"id":"CONTROL","name":"CONTROL","value":"CharSet[0..31, 127]","doc":"The control-char character set","summary":"<p>The control-char character set</p>"},{"id":"HEXADECIMAL","name":"HEXADECIMAL","value":"UPPERCASE_HEXADECIMAL | LOWERCASE_HEXADECIMAL","doc":"The hexadecimal character set","summary":"<p>The hexadecimal character set</p>"},{"id":"LOWERCASE_ALPHA","name":"LOWERCASE_ALPHA","value":"CharSet['a'..'z']","doc":"The lower-case alpha character set","summary":"<p>The lower-case alpha character set</p>"},{"id":"LOWERCASE_HEXADECIMAL","name":"LOWERCASE_HEXADECIMAL","value":"NUMERIC | CharSet['a'..'f']","doc":"The lower-case hexadecimal character set","summary":"<p>The lower-case hexadecimal character set</p>"},{"id":"NUMERIC","name":"NUMERIC","value":"CharSet['0'..'9']","doc":"The numeric decimal character set","summary":"<p>The numeric decimal character set</p>"},{"id":"OCTAL","name":"OCTAL","value":"CharSet['0'..'7']","doc":"The octal character set","summary":"<p>The octal character set</p>"},{"id":"PRINTABLE","name":"PRINTABLE","value":"((ALPHA_NUMERIC | PUNCTUATION) | SYMBOLS) | SPACE","doc":"The set of printable characters (including spaces)","summary":"<p>The set of printable characters (including spaces)</p>"},{"id":"PUNCTUATION","name":"PUNCTUATION","value":"CharSet[' ', '\\'', '\"', '`', ',', ';', ':', '~', '-', '(', ')', '[', ']', '{', '}', '.', '?', '!']","doc":"The punctuation character set","summary":"<p>The punctuation character set</p>"},{"id":"SIGNED_ASCII","name":"SIGNED_ASCII","value":"CharSet[0..127]","doc":"The signed ASCII character set","summary":"<p>The signed ASCII character set</p>"},{"id":"SPACE","name":"SPACE","value":"CharSet[' ', '\\f', '\\n', '\\r', '\\t', '\\v']","doc":"The space character set","summary":"<p>The space character set</p>"},{"id":"SYMBOLS","name":"SYMBOLS","value":"PUNCTUATION | CharSet['@', '#', '$', '%', '^', '&', '*', '_', '+', '=', '|', '\\\\', '<', '>', '/']","doc":"The symbolic character set","summary":"<p>The symbolic character set</p>"},{"id":"UPPERCASE_ALPHA","name":"UPPERCASE_ALPHA","value":"CharSet['A'..'Z']","doc":"The upper-case alpha character set","summary":"<p>The upper-case alpha character set</p>"},{"id":"UPPERCASE_HEXADECIMAL","name":"UPPERCASE_HEXADECIMAL","value":"NUMERIC | CharSet['A'..'F']","doc":"The upper-case hexadecimal character set","summary":"<p>The upper-case hexadecimal character set</p>"},{"id":"VISIBLE","name":"VISIBLE","value":"ALPHA_NUMERIC | CharSet['\\'', '\"', '`', ',', ';', ':', '~', '-', '(', ')', '[', ']', '{', '}', '.', '?', '!', '@', '#', '$', '%', '^', '&', '*', '_', '+', '=', '|', '\\\\', '<', '>', '/']","doc":"The set of printable characters (not including spaces)","summary":"<p>The set of printable characters (not including spaces)</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"alpha-class-method","html_id":"alpha-class-method","name":"alpha","doc":"\nThe alphabetic character set. See `ALPHA`.\n","summary":"<p>The alphabetic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":115,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L115"},"def":{"name":"alpha","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ALPHA"}},{"id":"alpha_numeric-class-method","html_id":"alpha_numeric-class-method","name":"alpha_numeric","doc":"\nThe alpha-numeric character set. See `ALPHA_NUMERIC`.\n","summary":"<p>The alpha-numeric character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":122,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L122"},"def":{"name":"alpha_numeric","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ALPHA_NUMERIC"}},{"id":"ascii-class-method","html_id":"ascii-class-method","name":"ascii","doc":"\nThe ASCII character set. See `ASCII`.\n","summary":"<p>The ASCII character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":178,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L178"},"def":{"name":"ascii","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ASCII"}},{"id":"control-class-method","html_id":"control-class-method","name":"control","doc":"\nThe control-character character set. See `CONTROL`.\n","summary":"<p>The control-character character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":164,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L164"},"def":{"name":"control","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"CONTROL"}},{"id":"hexadecimal-class-method","html_id":"hexadecimal-class-method","name":"hexadecimal","doc":"\nThe hexadecimal character set. See `HEXADECIMAL`.\n","summary":"<p>The hexadecimal character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":94,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L94"},"def":{"name":"hexadecimal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"HEXADECIMAL"}},{"id":"lowercase_alpha-class-method","html_id":"lowercase_alpha-class-method","name":"lowercase_alpha","doc":"\nThe lower-case alphabetic character set. See `LOWERCASE_ALPHA`.\n","summary":"<p>The lower-case alphabetic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":108,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L108"},"def":{"name":"lowercase_alpha","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LOWERCASE_ALPHA"}},{"id":"lowercase_hexadecimal-class-method","html_id":"lowercase_hexadecimal-class-method","name":"lowercase_hexadecimal","doc":"\nThe lower-case hexadecimal character set. See `LOWERCASE_HEXADECIMAL`.\n","summary":"<p>The lower-case hexadecimal character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":87,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L87"},"def":{"name":"lowercase_hexadecimal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LOWERCASE_HEXADECIMAL"}},{"id":"numeric-class-method","html_id":"numeric-class-method","name":"numeric","doc":"\nThe decimal-digit character set. See `NUMERIC`.\n","summary":"<p>The decimal-digit character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":66,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L66"},"def":{"name":"numeric","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NUMERIC"}},{"id":"octal-class-method","html_id":"octal-class-method","name":"octal","doc":"\nThe octal-digit character set. See `OCTAL`.\n","summary":"<p>The octal-digit character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":73,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L73"},"def":{"name":"octal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"OCTAL"}},{"id":"printable-class-method","html_id":"printable-class-method","name":"printable","doc":"\nThe set of printable characters, including spaces. See `PRINTABLE`.\n","summary":"<p>The set of printable characters, including spaces.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":157,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L157"},"def":{"name":"printable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PRINTABLE"}},{"id":"punctuation-class-method","html_id":"punctuation-class-method","name":"punctuation","doc":"\nThe punctuation character set. See `PUNCTUATION`.\n","summary":"<p>The punctuation character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":129,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L129"},"def":{"name":"punctuation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PUNCTUATION"}},{"id":"signed_ascii-class-method","html_id":"signed_ascii-class-method","name":"signed_ascii","doc":"\nThe signed ASCII character set. See `SIGNED_ASCII`.\n","summary":"<p>The signed ASCII character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":171,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L171"},"def":{"name":"signed_ascii","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SIGNED_ASCII"}},{"id":"space-class-method","html_id":"space-class-method","name":"space","doc":"\nThe white-space character set. See `SPACE`.\n","summary":"<p>The white-space character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":143,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L143"},"def":{"name":"space","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SPACE"}},{"id":"symbols-class-method","html_id":"symbols-class-method","name":"symbols","doc":"\nThe symbolic character set. See `SYMBOLS`.\n","summary":"<p>The symbolic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":136,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L136"},"def":{"name":"symbols","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SYMBOLS"}},{"id":"uppercase_alpha-class-method","html_id":"uppercase_alpha-class-method","name":"uppercase_alpha","doc":"\nThe upper-case alphabetic character set. See `UPPERCASE_ALPHA`.\n","summary":"<p>The upper-case alphabetic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":101,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L101"},"def":{"name":"uppercase_alpha","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"UPPERCASE_ALPHA"}},{"id":"uppercase_hexadecimal-class-method","html_id":"uppercase_hexadecimal-class-method","name":"uppercase_hexadecimal","doc":"\nThe upper-case hexadecimal character set. See `UPPERCASE_HEXADECIMAL`.\n","summary":"<p>The upper-case hexadecimal character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":80,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L80"},"def":{"name":"uppercase_hexadecimal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"UPPERCASE_HEXADECIMAL"}},{"id":"visible-class-method","html_id":"visible-class-method","name":"visible","doc":"\nThe set of printable characters, not including spaces. See `VISIBLE`.\n","summary":"<p>The set of printable characters, not including spaces.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars.cr","line_number":150,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars.cr#L150"},"def":{"name":"visible","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"VISIBLE"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"chars/Chars/CharSet","path":"Chars/CharSet.html","kind":"class","full_name":"Chars::CharSet","name":"CharSet","abstract":false,"superclass":{"html_id":"chars/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"chars/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"chars/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"chars/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/chars/char_set.cr","line_number":2,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L2"}],"repository_name":"chars","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"chars/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"chars/Chars","kind":"module","full_name":"Chars","name":"Chars"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"[](*values:UInt8|Int32|Char|Range(UInt8,UInt8)|Range(Int32,Int32)|Range(Char,Char)):CharSet-class-method","html_id":"[](*values:UInt8|Int32|Char|Range(UInt8,UInt8)|Range(Int32,Int32)|Range(Char,Char)):CharSet-class-method","name":"[]","doc":"\nCreates a new `CharSet` using the list of chars, bytes, or ranges of\nchars/bytes.\n","summary":"<p>Creates a new <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> using the list of chars, bytes, or ranges of chars/bytes.</p>","abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"UInt8 | Int32 | Char | Range(UInt8, UInt8) | Range(Int32, Int32) | Range(Char, Char)"}],"args_string":"(*values : UInt8 | Int32 | Char | Range(UInt8, UInt8) | Range(Int32, Int32) | Range(Char, Char)) : CharSet","args_html":"(*values : UInt8 | Int32 | Char | Range(UInt8, UInt8) | Range(Int32, Int32) | Range(Char, Char)) : <a href=\"../Chars/CharSet.html\">CharSet</a>","location":{"filename":"src/chars/char_set.cr","line_number":44,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L44"},"def":{"name":"[]","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"UInt8 | Int32 | Char | Range(UInt8, UInt8) | Range(Int32, Int32) | Range(Char, Char)"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"CharSet","visibility":"Public","body":"char_set = new()\nvalues.each do |value|\n  case value\n  when Range\n    value.each do |v|\n      char_set << v\n    end\n  else\n    char_set << value\n  end\nend\nreturn char_set\n"}},{"id":"new(values:Enumerable(UInt8|Int32|Char))-class-method","html_id":"new(values:Enumerable(UInt8|Int32|Char))-class-method","name":"new","doc":"\nInitializes the `CharSet` using the list of bytes or chars.\n","summary":"<p>Initializes the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> using the list of bytes or chars.</p>","abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Enumerable(UInt8 | Int32 | Char)"}],"args_string":"(values : Enumerable(UInt8 | Int32 | Char))","args_html":"(values : Enumerable(UInt8 | Int32 | Char))","location":{"filename":"src/chars/char_set.cr","line_number":20,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L20"},"def":{"name":"new","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Enumerable(UInt8 | Int32 | Char)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(values:Indexable(UInt8|Int32|Char))-class-method","html_id":"new(values:Indexable(UInt8|Int32|Char))-class-method","name":"new","doc":"\nInitializes the `CharSet` using the list of bytes or chars.\n","summary":"<p>Initializes the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> using the list of bytes or chars.</p>","abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Indexable(UInt8 | Int32 | Char)"}],"args_string":"(values : Indexable(UInt8 | Int32 | Char))","args_html":"(values : Indexable(UInt8 | Int32 | Char))","location":{"filename":"src/chars/char_set.cr","line_number":31,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L31"},"def":{"name":"new","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Indexable(UInt8 | Int32 | Char)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"\nInitializes an empty `CharSet`.\n","summary":"<p>Initializes an empty <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/char_set.cr","line_number":12,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L12"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"&(other:CharSet):CharSet-instance-method","html_id":"&(other:CharSet):CharSet-instance-method","name":"&","doc":"\nIntersects the `CharSet` with another `CharSet`, returning a new `CharSet`.\n","summary":"<p>Intersects the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> with another <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>, returning a new <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"args_string":"(other : CharSet) : CharSet","args_html":"(other : <a href=\"../Chars/CharSet.html\">CharSet</a>) : <a href=\"../Chars/CharSet.html\">CharSet</a>","location":{"filename":"src/chars/char_set.cr","line_number":407,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L407"},"def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CharSet","visibility":"Public","body":"CharSet.new(@char_set & (other.@char_set))"}},{"id":"+(other:CharSet):CharSet-instance-method","html_id":"+(other:CharSet):CharSet-instance-method","name":"+","doc":"\nSee `#+`.\n","summary":"<p>See <code><a href=\"../Chars/CharSet.html#+(other:CharSet):CharSet-instance-method\">#+</a></code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"args_string":"(other : CharSet) : CharSet","args_html":"(other : <a href=\"../Chars/CharSet.html\">CharSet</a>) : <a href=\"../Chars/CharSet.html\">CharSet</a>","location":{"filename":"src/chars/char_set.cr","line_number":392,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L392"},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CharSet","visibility":"Public","body":"self | other"}},{"id":"-(other:CharSet):CharSet-instance-method","html_id":"-(other:CharSet):CharSet-instance-method","name":"-","doc":"\nSubtracts the characters of another `CharSet` from the `CharSet`,\nreturning a new `CharSet`.\n","summary":"<p>Subtracts the characters of another <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>, returning a new <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"args_string":"(other : CharSet) : CharSet","args_html":"(other : <a href=\"../Chars/CharSet.html\">CharSet</a>) : <a href=\"../Chars/CharSet.html\">CharSet</a>","location":{"filename":"src/chars/char_set.cr","line_number":400,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L400"},"def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CharSet","visibility":"Public","body":"CharSet.new(@char_set - (other.@char_set))"}},{"id":"<<(value:Char):CharSet-instance-method","html_id":"<<(value:Char):CharSet-instance-method","name":"<<","doc":"\nAppends a new character to the `CharSet`.\n","summary":"<p>Appends a new character to the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Char"}],"args_string":"(value : Char) : CharSet","args_html":"(value : Char) : <a href=\"../Chars/CharSet.html\">CharSet</a>","location":{"filename":"src/chars/char_set.cr","line_number":78,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L78"},"def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CharSet","visibility":"Public","body":"@char_set << value\n@byte_set << value.ord\nreturn self\n"}},{"id":"<<(value:UInt8):CharSet-instance-method","html_id":"<<(value:UInt8):CharSet-instance-method","name":"<<","doc":"\nAppends a new byte value to the `CharSet`.\n","summary":"<p>Appends a new byte value to the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"UInt8"}],"args_string":"(value : UInt8) : CharSet","args_html":"(value : UInt8) : <a href=\"../Chars/CharSet.html\">CharSet</a>","location":{"filename":"src/chars/char_set.cr","line_number":87,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L87"},"def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CharSet","visibility":"Public","body":"self << value.to_i32"}},{"id":"<<(value:Int32):CharSet-instance-method","html_id":"<<(value:Int32):CharSet-instance-method","name":"<<","doc":"\nAppends a new byte value to the `CharSet`.\n","summary":"<p>Appends a new byte value to the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32) : CharSet","args_html":"(value : Int32) : <a href=\"../Chars/CharSet.html\">CharSet</a>","location":{"filename":"src/chars/char_set.cr","line_number":94,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L94"},"def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CharSet","visibility":"Public","body":"@char_set << value.chr\n@byte_set << value\nreturn self\n"}},{"id":"==(other:CharSet):Bool-instance-method","html_id":"==(other:CharSet):Bool-instance-method","name":"==","doc":"\nDetermines whether the `CharSet` is equal to another `CharSet`.\n","summary":"<p>Determines whether the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> is equal to another <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"args_string":"(other : CharSet) : Bool","args_html":"(other : <a href=\"../Chars/CharSet.html\">CharSet</a>) : Bool","location":{"filename":"src/chars/char_set.cr","line_number":428,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L428"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@char_set == (other.@char_set)"}},{"id":"===(other:String):Bool-instance-method","html_id":"===(other:String):Bool-instance-method","name":"===","doc":"\nDetermines whether all characters in a given string also belong to the\n`CharSet`.\n","summary":"<p>Determines whether all characters in a given string also belong to the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"String"}],"args_string":"(other : String) : Bool","args_html":"(other : <a href=\"../String.html\">String</a>) : Bool","location":{"filename":"src/chars/char_set.cr","line_number":436,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L436"},"def":{"name":"===","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if other.valid_encoding?\n  other.chars.all? do |char|\n    includes_char?(char)\n  end\nelse\n  other.bytes.all? do |byte|\n    includes_byte?(byte.to_i32)\n  end\nend"}},{"id":"=~(string:String)-instance-method","html_id":"=~(string:String)-instance-method","name":"=~","doc":"\nSee `#===`.\n","summary":"<p>See <code><a href=\"../Chars/CharSet.html#===(other:String):Bool-instance-method\">#===</a></code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","args_html":"(string : <a href=\"../String.html\">String</a>)","location":{"filename":"src/chars/char_set.cr","line_number":448,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L448"},"def":{"name":"=~","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self === string"}},{"id":"byte_set:Set(Int32)-instance-method","html_id":"byte_set:Set(Int32)-instance-method","name":"byte_set","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Set(Int32)","args_html":" : Set(Int32)","location":{"filename":"src/chars/char_set.cr","line_number":6,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L6"},"def":{"name":"byte_set","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Set(Int32)","visibility":"Public","body":"@byte_set"}},{"id":"bytes:Array(Int32)-instance-method","html_id":"bytes:Array(Int32)-instance-method","name":"bytes","doc":"\nThe byte values within the `CharSet`.\n","summary":"<p>The byte values within the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/chars/char_set.cr","line_number":64,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L64"},"def":{"name":"bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@byte_set.to_a"}},{"id":"char_set:Set(Char)-instance-method","html_id":"char_set:Set(Char)-instance-method","name":"char_set","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Set(Char)","args_html":" : Set(Char)","location":{"filename":"src/chars/char_set.cr","line_number":7,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L7"},"def":{"name":"char_set","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Set(Char)","visibility":"Public","body":"@char_set"}},{"id":"chars:Array(Char)-instance-method","html_id":"chars:Array(Char)-instance-method","name":"chars","doc":"\nThe character values within the `CharSet`.\n","summary":"<p>The character values within the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[],"args_string":" : Array(Char)","args_html":" : Array(Char)","location":{"filename":"src/chars/char_set.cr","line_number":71,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L71"},"def":{"name":"chars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Char)","visibility":"Public","body":"@char_set.to_a"}},{"id":"each(*args,**options)-instance-method","html_id":"each(*args,**options)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/chars/char_set.cr","line_number":151,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L151"},"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_set.each(*args, **options)"}},{"id":"each(*args,**options,&)-instance-method","html_id":"each(*args,**options,&)-instance-method","name":"each","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/chars/char_set.cr","line_number":151,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L151"},"def":{"name":"each","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_set.each(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"each_byte(&block:Int32->)-instance-method","html_id":"each_byte(&block:Int32->)-instance-method","name":"each_byte","doc":"\nEnumerates over each byte within the `CharSet`.\n","summary":"<p>Enumerates over each byte within the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[],"args_string":"(&block : Int32 -> )","args_html":"(&block : Int32 -> )","location":{"filename":"src/chars/char_set.cr","line_number":140,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L140"},"def":{"name":"each_byte","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Int32 -> )"},"return_type":"","visibility":"Public","body":"@byte_set.each(&block)"}},{"id":"each_char(&block:Char->)-instance-method","html_id":"each_char(&block:Char->)-instance-method","name":"each_char","doc":"\nEnumerates over each char within the `CharSet`.\n","summary":"<p>Enumerates over each char within the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[],"args_string":"(&block : Char -> )","args_html":"(&block : Char -> )","location":{"filename":"src/chars/char_set.cr","line_number":147,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L147"},"def":{"name":"each_char","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Char -> )"},"return_type":"","visibility":"Public","body":"@char_set.each(&block)"}},{"id":"each_random_byte(n:Int,&block:Int32->)-instance-method","html_id":"each_random_byte(n:Int,&block:Int32->)-instance-method","name":"each_random_byte","doc":"\nEnumerates over `n` random bytes from the `CharSet`.\n","summary":"<p>Enumerates over <code>n</code> random bytes from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"args_string":"(n : Int, &block : Int32 -> )","args_html":"(n : <a href=\"../Int.html\">Int</a>, &block : Int32 -> )","location":{"filename":"src/chars/char_set.cr","line_number":202,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L202"},"def":{"name":"each_random_byte","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Int32 -> )"},"return_type":"","visibility":"Public","body":"n.times do\n  yield random_byte\nend"}},{"id":"each_random_char(n:Int,&block:Char->)-instance-method","html_id":"each_random_char(n:Int,&block:Char->)-instance-method","name":"each_random_char","doc":"\nEnumerates over `n` random chars from the `CharSet`.\n","summary":"<p>Enumerates over <code>n</code> random chars from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"args_string":"(n : Int, &block : Char -> )","args_html":"(n : <a href=\"../Int.html\">Int</a>, &block : Char -> )","location":{"filename":"src/chars/char_set.cr","line_number":209,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L209"},"def":{"name":"each_random_char","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Char -> )"},"return_type":"","visibility":"Public","body":"n.times do\n  yield random_char\nend"}},{"id":"each_substring(data:String,min_length:Int=4,&block:String->)-instance-method","html_id":"each_substring(data:String,min_length:Int=4,&block:String->)-instance-method","name":"each_substring","doc":"\nEnumerates over all substrings within the given string, of minimum length\nand that are made up of characters from the `CharSet`.\n","summary":"<p>Enumerates over all substrings within the given string, of minimum length and that are made up of characters from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"},{"name":"min_length","doc":null,"default_value":"4","external_name":"min_length","restriction":"Int"}],"args_string":"(data : String, min_length : Int = <span class=\"n\">4</span>, &block : String -> )","args_html":"(data : <a href=\"../String.html\">String</a>, min_length : <a href=\"../Int.html\">Int</a> = <span class=\"n\">4</span>, &block : <a href=\"../String.html\">String</a> -> )","location":{"filename":"src/chars/char_set.cr","line_number":361,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L361"},"def":{"name":"each_substring","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"},{"name":"min_length","doc":null,"default_value":"4","external_name":"min_length","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String -> )"},"return_type":"","visibility":"Public","body":"each_substring_with_index(data, min_length) do |substring, index|\n  yield substring\nend"}},{"id":"each_substring_with_index(data:String,min_length:Int=4,&block:String,Int32->)-instance-method","html_id":"each_substring_with_index(data:String,min_length:Int=4,&block:String,Int32->)-instance-method","name":"each_substring_with_index","doc":"\nEnumerates over all substrings and their indices within the given string,\nof minimum length and that are made up of characters from the `CharSet`.\n","summary":"<p>Enumerates over all substrings and their indices within the given string, of minimum length and that are made up of characters from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"},{"name":"min_length","doc":null,"default_value":"4","external_name":"min_length","restriction":"Int"}],"args_string":"(data : String, min_length : Int = <span class=\"n\">4</span>, &block : String, Int32 -> )","args_html":"(data : <a href=\"../String.html\">String</a>, min_length : <a href=\"../Int.html\">Int</a> = <span class=\"n\">4</span>, &block : <a href=\"../String.html\">String</a>, Int32 -> )","location":{"filename":"src/chars/char_set.cr","line_number":305,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L305"},"def":{"name":"each_substring_with_index","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"},{"name":"min_length","doc":null,"default_value":"4","external_name":"min_length","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(String, Int32 -> )"},"return_type":"","visibility":"Public","body":"if data.size < min_length\n  return\nend\nindex : Int32 = 0\nmatch_start : Int32 | ::Nil = nil\nmatch_end : Int32 | ::Nil = nil\nwhile index < data.size\n  if match_start\n    if includes_char?(data[index])\n    else\n      match_end = index\n      match_length = (match_end - match_start)\n      if match_length >= min_length\n        match = data[match_start, match_length]\n        yield match, match_start\n      end\n      match_start = match_end = nil\n    end\n  else\n    if includes_char?(data[index])\n      match_start = index\n    end\n  end\n  index = index + 1\nend\nif match_start\n  yield data[match_start, data.size - match_start], match_start\nend\n"}},{"id":"includes?(byte:UInt8|Int32):Bool-instance-method","html_id":"includes?(byte:UInt8|Int32):Bool-instance-method","name":"includes?","doc":"\nSee `#includes_byte?`.\n","summary":"<p>See <code><a href=\"../Chars/CharSet.html#includes_byte?(byte:UInt8):Bool-instance-method\">#includes_byte?</a></code>.</p>","abstract":false,"args":[{"name":"byte","doc":null,"default_value":"","external_name":"byte","restriction":"UInt8 | Int32"}],"args_string":"(byte : UInt8 | Int32) : Bool","args_html":"(byte : UInt8 | Int32) : Bool","location":{"filename":"src/chars/char_set.cr","line_number":125,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L125"},"def":{"name":"includes?","args":[{"name":"byte","doc":null,"default_value":"","external_name":"byte","restriction":"UInt8 | Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"includes_byte?(byte)"}},{"id":"includes?(char:Char):Bool-instance-method","html_id":"includes?(char:Char):Bool-instance-method","name":"includes?","doc":"\nSee `#includes_char?`.\n","summary":"<p>See <code><a href=\"../Chars/CharSet.html#includes_char?(char:Char):Bool-instance-method\">#includes_char?</a></code>.</p>","abstract":false,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"}],"args_string":"(char : Char) : Bool","args_html":"(char : Char) : Bool","location":{"filename":"src/chars/char_set.cr","line_number":133,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L133"},"def":{"name":"includes?","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"includes_char?(char)"}},{"id":"includes_byte?(byte:UInt8):Bool-instance-method","html_id":"includes_byte?(byte:UInt8):Bool-instance-method","name":"includes_byte?","doc":"\nDetermines if the given byte exists in the `CharSet`.\n","summary":"<p>Determines if the given byte exists in the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"byte","doc":null,"default_value":"","external_name":"byte","restriction":"UInt8"}],"args_string":"(byte : UInt8) : Bool","args_html":"(byte : UInt8) : Bool","location":{"filename":"src/chars/char_set.cr","line_number":103,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L103"},"def":{"name":"includes_byte?","args":[{"name":"byte","doc":null,"default_value":"","external_name":"byte","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"includes_byte?(byte.to_i32)"}},{"id":"includes_byte?(byte:Int32):Bool-instance-method","html_id":"includes_byte?(byte:Int32):Bool-instance-method","name":"includes_byte?","doc":"\nDetermines if the given byte exists in the `CharSet`.\n","summary":"<p>Determines if the given byte exists in the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"byte","doc":null,"default_value":"","external_name":"byte","restriction":"Int32"}],"args_string":"(byte : Int32) : Bool","args_html":"(byte : Int32) : Bool","location":{"filename":"src/chars/char_set.cr","line_number":110,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L110"},"def":{"name":"includes_byte?","args":[{"name":"byte","doc":null,"default_value":"","external_name":"byte","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@byte_set.includes?(byte)"}},{"id":"includes_char?(char:Char):Bool-instance-method","html_id":"includes_char?(char:Char):Bool-instance-method","name":"includes_char?","doc":"\nDetermines if the given char exists in the `CharSet`.\n","summary":"<p>Determines if the given char exists in the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"}],"args_string":"(char : Char) : Bool","args_html":"(char : Char) : Bool","location":{"filename":"src/chars/char_set.cr","line_number":117,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L117"},"def":{"name":"includes_char?","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@char_set.includes?(char)"}},{"id":"intersects?(other:CharSet):Bool-instance-method","html_id":"intersects?(other:CharSet):Bool-instance-method","name":"intersects?","doc":"\nDetermines whether the `CharSet` intersects with another `CharSet`.\n","summary":"<p>Determines whether the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> intersects with another <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"args_string":"(other : CharSet) : Bool","args_html":"(other : <a href=\"../Chars/CharSet.html\">CharSet</a>) : Bool","location":{"filename":"src/chars/char_set.cr","line_number":414,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L414"},"def":{"name":"intersects?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@char_set.any? do |char|\n  other.includes_char?(char)\nend"}},{"id":"map(*args,**options)-instance-method","html_id":"map(*args,**options)-instance-method","name":"map","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/chars/char_set.cr","line_number":183,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L183"},"def":{"name":"map","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_set.map(*args, **options)"}},{"id":"map(*args,**options,&)-instance-method","html_id":"map(*args,**options,&)-instance-method","name":"map","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/chars/char_set.cr","line_number":183,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L183"},"def":{"name":"map","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_set.map(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"map_bytes(&block:Int32->T):Array(T)forallT-instance-method","html_id":"map_bytes(&block:Int32->T):Array(T)forallT-instance-method","name":"map_bytes","doc":"\nMaps the bytes within the `CharSet` using the given block.\n","summary":"<p>Maps the bytes within the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> using the given block.</p>","abstract":false,"args":[],"args_string":"(&block : Int32 -> T) : Array(T) forall T","args_html":"(&block : Int32 -> T) : Array(T) forall T","location":{"filename":"src/chars/char_set.cr","line_number":172,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L172"},"def":{"name":"map_bytes","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Int32 -> T)"},"return_type":"Array(T)","visibility":"Public","body":"@byte_set.map(&block)"}},{"id":"map_chars(&block:Char->T):Array(T)forallT-instance-method","html_id":"map_chars(&block:Char->T):Array(T)forallT-instance-method","name":"map_chars","doc":"\nMaps the chars within the `CharSet` using the given block.\n","summary":"<p>Maps the chars within the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> using the given block.</p>","abstract":false,"args":[],"args_string":"(&block : Char -> T) : Array(T) forall T","args_html":"(&block : Char -> T) : Array(T) forall T","location":{"filename":"src/chars/char_set.cr","line_number":179,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L179"},"def":{"name":"map_chars","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Char -> T)"},"return_type":"Array(T)","visibility":"Public","body":"@char_set.map(&block)"}},{"id":"random_byte:Int32-instance-method","html_id":"random_byte:Int32-instance-method","name":"random_byte","doc":"\nReturns a random byte from the `CharSet`.\n","summary":"<p>Returns a random byte from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/chars/char_set.cr","line_number":188,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L188"},"def":{"name":"random_byte","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@byte_set.sample"}},{"id":"random_bytes(lengths:Array(Int)|Range(Int,Int)):Array(Int32)-instance-method","html_id":"random_bytes(lengths:Array(Int)|Range(Int,Int)):Array(Int32)-instance-method","name":"random_bytes","doc":"\nReturns an Array of random bytes from the `CharSet`.\n","summary":"<p>Returns an Array of random bytes from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"lengths","doc":null,"default_value":"","external_name":"lengths","restriction":"Array(Int) | Range(Int, Int)"}],"args_string":"(lengths : Array(Int) | Range(Int, Int)) : Array(Int32)","args_html":"(lengths : Array(<a href=\"../Int.html\">Int</a>) | Range(<a href=\"../Int.html\">Int</a>, <a href=\"../Int.html\">Int</a>)) : Array(Int32)","location":{"filename":"src/chars/char_set.cr","line_number":223,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L223"},"def":{"name":"random_bytes","args":[{"name":"lengths","doc":null,"default_value":"","external_name":"lengths","restriction":"Array(Int) | Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"Array(Int32).new(lengths.sample) do\n  random_byte\nend"}},{"id":"random_bytes(length:Int):Array(Int32)-instance-method","html_id":"random_bytes(length:Int):Array(Int32)-instance-method","name":"random_bytes","doc":"\nReturns an Array of `n` random bytes from the `CharSet`.\n","summary":"<p>Returns an Array of <code>n</code> random bytes from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"args_string":"(length : Int) : Array(Int32)","args_html":"(length : <a href=\"../Int.html\">Int</a>) : Array(Int32)","location":{"filename":"src/chars/char_set.cr","line_number":216,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L216"},"def":{"name":"random_bytes","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@byte_set.sample(length)"}},{"id":"random_char:Char-instance-method","html_id":"random_char:Char-instance-method","name":"random_char","doc":"\nReturns a random char from the `CharSet`.\n","summary":"<p>Returns a random char from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[],"args_string":" : Char","args_html":" : Char","location":{"filename":"src/chars/char_set.cr","line_number":195,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L195"},"def":{"name":"random_char","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Char","visibility":"Public","body":"@char_set.sample"}},{"id":"random_chars(lengths:Array(Int)|Range(Int,Int)):Array(Char)-instance-method","html_id":"random_chars(lengths:Array(Int)|Range(Int,Int)):Array(Char)-instance-method","name":"random_chars","doc":"\nReturns an Array of random chars from the `CharSet`.\n","summary":"<p>Returns an Array of random chars from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"lengths","doc":null,"default_value":"","external_name":"lengths","restriction":"Array(Int) | Range(Int, Int)"}],"args_string":"(lengths : Array(Int) | Range(Int, Int)) : Array(Char)","args_html":"(lengths : Array(<a href=\"../Int.html\">Int</a>) | Range(<a href=\"../Int.html\">Int</a>, <a href=\"../Int.html\">Int</a>)) : Array(Char)","location":{"filename":"src/chars/char_set.cr","line_number":239,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L239"},"def":{"name":"random_chars","args":[{"name":"lengths","doc":null,"default_value":"","external_name":"lengths","restriction":"Array(Int) | Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Char)","visibility":"Public","body":"Array(Char).new(lengths.sample) do\n  random_char\nend"}},{"id":"random_chars(length:Int):Array(Char)-instance-method","html_id":"random_chars(length:Int):Array(Char)-instance-method","name":"random_chars","doc":"\nReturns an Array of random chars from the `CharSet`.\n","summary":"<p>Returns an Array of random chars from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"args_string":"(length : Int) : Array(Char)","args_html":"(length : <a href=\"../Int.html\">Int</a>) : Array(Char)","location":{"filename":"src/chars/char_set.cr","line_number":232,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L232"},"def":{"name":"random_chars","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Char)","visibility":"Public","body":"@char_set.sample(length)"}},{"id":"random_distinct_bytes(length:Int):Array(Int32)-instance-method","html_id":"random_distinct_bytes(length:Int):Array(Int32)-instance-method","name":"random_distinct_bytes","doc":"\nReturns an Array of random, but unique, bytes from the `CharSet`.\n","summary":"<p>Returns an Array of random, but unique, bytes from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"args_string":"(length : Int) : Array(Int32)","args_html":"(length : <a href=\"../Int.html\">Int</a>) : Array(Int32)","location":{"filename":"src/chars/char_set.cr","line_number":255,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L255"},"def":{"name":"random_distinct_bytes","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@byte_set.to_a.shuffle[0, length]"}},{"id":"random_distinct_bytes(length:Array(Int)):Array(Int32)-instance-method","html_id":"random_distinct_bytes(length:Array(Int)):Array(Int32)-instance-method","name":"random_distinct_bytes","doc":"\nReturns an Array of random, but unique, bytes from the `CharSet`.\n","summary":"<p>Returns an Array of random, but unique, bytes from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Array(Int)"}],"args_string":"(length : Array(Int)) : Array(Int32)","args_html":"(length : Array(<a href=\"../Int.html\">Int</a>)) : Array(Int32)","location":{"filename":"src/chars/char_set.cr","line_number":262,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L262"},"def":{"name":"random_distinct_bytes","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Array(Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"bytes.shuffle[0, length.sample]"}},{"id":"random_distinct_bytes(length:Range(Int,Int)):Array(Int32)-instance-method","html_id":"random_distinct_bytes(length:Range(Int,Int)):Array(Int32)-instance-method","name":"random_distinct_bytes","doc":"\nReturns an Array of random, but unique, bytes from the `CharSet`.\n","summary":"<p>Returns an Array of random, but unique, bytes from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Range(Int, Int)"}],"args_string":"(length : Range(Int, Int)) : Array(Int32)","args_html":"(length : Range(<a href=\"../Int.html\">Int</a>, <a href=\"../Int.html\">Int</a>)) : Array(Int32)","location":{"filename":"src/chars/char_set.cr","line_number":269,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L269"},"def":{"name":"random_distinct_bytes","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@byte_set.to_a.shuffle[0, rand(length)]"}},{"id":"random_distinct_chars(length:Int):Array(Char)-instance-method","html_id":"random_distinct_chars(length:Int):Array(Char)-instance-method","name":"random_distinct_chars","doc":"\nReturns an Array of random, but unique, chars from the `CharSet`.\n","summary":"<p>Returns an Array of random, but unique, chars from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"args_string":"(length : Int) : Array(Char)","args_html":"(length : <a href=\"../Int.html\">Int</a>) : Array(Char)","location":{"filename":"src/chars/char_set.cr","line_number":276,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L276"},"def":{"name":"random_distinct_chars","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Char)","visibility":"Public","body":"@char_set.to_a.shuffle[0, length]"}},{"id":"random_distinct_chars(length:Array(Int)):Array(Char)-instance-method","html_id":"random_distinct_chars(length:Array(Int)):Array(Char)-instance-method","name":"random_distinct_chars","doc":"\nReturns an Array of random, but unique, chars from the `CharSet`.\n","summary":"<p>Returns an Array of random, but unique, chars from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Array(Int)"}],"args_string":"(length : Array(Int)) : Array(Char)","args_html":"(length : Array(<a href=\"../Int.html\">Int</a>)) : Array(Char)","location":{"filename":"src/chars/char_set.cr","line_number":283,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L283"},"def":{"name":"random_distinct_chars","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Array(Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Char)","visibility":"Public","body":"chars.shuffle[0, length.sample]"}},{"id":"random_distinct_chars(length:Range(Int,Int)):Array(Char)-instance-method","html_id":"random_distinct_chars(length:Range(Int,Int)):Array(Char)-instance-method","name":"random_distinct_chars","doc":"\nReturns an Array of random, but unique, chars from the `CharSet`.\n","summary":"<p>Returns an Array of random, but unique, chars from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Range(Int, Int)"}],"args_string":"(length : Range(Int, Int)) : Array(Char)","args_html":"(length : Range(<a href=\"../Int.html\">Int</a>, <a href=\"../Int.html\">Int</a>)) : Array(Char)","location":{"filename":"src/chars/char_set.cr","line_number":290,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L290"},"def":{"name":"random_distinct_chars","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Char)","visibility":"Public","body":"@char_set.to_a.shuffle[0, rand(length)]"}},{"id":"random_distinct_string(length:Int|Array(Int)|Range(Int,Int)):String-instance-method","html_id":"random_distinct_string(length:Int|Array(Int)|Range(Int,Int)):String-instance-method","name":"random_distinct_string","doc":"\nReturns a String of random, but unique, chars from the `CharSet`.\n","summary":"<p>Returns a String of random, but unique, chars from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int | Array(Int) | Range(Int, Int)"}],"args_string":"(length : Int | Array(Int) | Range(Int, Int)) : String","args_html":"(length : <a href=\"../Int.html\">Int</a> | Array(<a href=\"../Int.html\">Int</a>) | Range(<a href=\"../Int.html\">Int</a>, <a href=\"../Int.html\">Int</a>)) : <a href=\"../String.html\">String</a>","location":{"filename":"src/chars/char_set.cr","line_number":297,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L297"},"def":{"name":"random_distinct_string","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int | Array(Int) | Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"(random_distinct_chars(length)).join"}},{"id":"random_string(length:Int|Array(Int)|Range(Int,Int)):String-instance-method","html_id":"random_string(length:Int|Array(Int)|Range(Int,Int)):String-instance-method","name":"random_string","doc":"\nReturns a String of random chars from the `CharSet`.\n","summary":"<p>Returns a String of random chars from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int | Array(Int) | Range(Int, Int)"}],"args_string":"(length : Int | Array(Int) | Range(Int, Int)) : String","args_html":"(length : <a href=\"../Int.html\">Int</a> | Array(<a href=\"../Int.html\">Int</a>) | Range(<a href=\"../Int.html\">Int</a>, <a href=\"../Int.html\">Int</a>)) : <a href=\"../String.html\">String</a>","location":{"filename":"src/chars/char_set.cr","line_number":248,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L248"},"def":{"name":"random_string","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int | Array(Int) | Range(Int, Int)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"(random_chars(length)).join"}},{"id":"select(*args,**options,&)-instance-method","html_id":"select(*args,**options,&)-instance-method","name":"select","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/chars/char_set.cr","line_number":167,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L167"},"def":{"name":"select","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_set.select(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"select(*args,**options)-instance-method","html_id":"select(*args,**options)-instance-method","name":"select","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/chars/char_set.cr","line_number":167,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L167"},"def":{"name":"select","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_set.select(*args, **options)"}},{"id":"select_bytes(&block:Int32->Bool):Array(Int32)-instance-method","html_id":"select_bytes(&block:Int32->Bool):Array(Int32)-instance-method","name":"select_bytes","doc":"\nSelects the bytes within the `CharSet` that match the given block.\n","summary":"<p>Selects the bytes within the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> that match the given block.</p>","abstract":false,"args":[],"args_string":"(&block : Int32 -> Bool) : Array(Int32)","args_html":"(&block : Int32 -> Bool) : Array(Int32)","location":{"filename":"src/chars/char_set.cr","line_number":156,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L156"},"def":{"name":"select_bytes","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Int32 -> Bool)"},"return_type":"Array(Int32)","visibility":"Public","body":"@byte_set.select(&block)"}},{"id":"select_chars(&block:Char->Bool):Array(Char)-instance-method","html_id":"select_chars(&block:Char->Bool):Array(Char)-instance-method","name":"select_chars","doc":"\nSelects the chars within the `CharSet` that match the given block.\n","summary":"<p>Selects the chars within the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> that match the given block.</p>","abstract":false,"args":[],"args_string":"(&block : Char -> Bool) : Array(Char)","args_html":"(&block : Char -> Bool) : Array(Char)","location":{"filename":"src/chars/char_set.cr","line_number":163,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L163"},"def":{"name":"select_chars","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Char -> Bool)"},"return_type":"Array(Char)","visibility":"Public","body":"@char_set.select(&block)"}},{"id":"subset_of?(other:CharSet):Bool-instance-method","html_id":"subset_of?(other:CharSet):Bool-instance-method","name":"subset_of?","doc":"\nDetermines whether the other `CharSet` is a sub-set of the `CharSet`.\n","summary":"<p>Determines whether the other <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> is a sub-set of the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"args_string":"(other : CharSet) : Bool","args_html":"(other : <a href=\"../Chars/CharSet.html\">CharSet</a>) : Bool","location":{"filename":"src/chars/char_set.cr","line_number":421,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L421"},"def":{"name":"subset_of?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@char_set.all? do |char|\n  other.includes_char?(char)\nend"}},{"id":"substrings(data:String,min_length:Int=4):Array(String)-instance-method","html_id":"substrings(data:String,min_length:Int=4):Array(String)-instance-method","name":"substrings","doc":"\nReturns an Array of all substrings within the given string,\nof minimum length and that are made up of characters from the `CharSet`.\n","summary":"<p>Returns an Array of all substrings within the given string, of minimum length and that are made up of characters from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"},{"name":"min_length","doc":null,"default_value":"4","external_name":"min_length","restriction":"Int"}],"args_string":"(data : String, min_length : Int = <span class=\"n\">4</span>) : Array(String)","args_html":"(data : <a href=\"../String.html\">String</a>, min_length : <a href=\"../Int.html\">Int</a> = <span class=\"n\">4</span>) : Array(<a href=\"../String.html\">String</a>)","location":{"filename":"src/chars/char_set.cr","line_number":371,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L371"},"def":{"name":"substrings","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"},{"name":"min_length","doc":null,"default_value":"4","external_name":"min_length","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"array = [] of String\neach_substring(data, min_length) do |substring|\n  array << substring\nend\nreturn array\n"}},{"id":"substrings_with_indexes(data:String,min_length:Int=4):Array(Tuple(String,Int32))-instance-method","html_id":"substrings_with_indexes(data:String,min_length:Int=4):Array(Tuple(String,Int32))-instance-method","name":"substrings_with_indexes","doc":"\nReturns an Array of all substrings and their indices within the given\nstring, of minimum length and that are made up of characters from the\n`CharSet`.\n","summary":"<p>Returns an Array of all substrings and their indices within the given string, of minimum length and that are made up of characters from the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"},{"name":"min_length","doc":null,"default_value":"4","external_name":"min_length","restriction":"Int"}],"args_string":"(data : String, min_length : Int = <span class=\"n\">4</span>) : Array(Tuple(String, Int32))","args_html":"(data : <a href=\"../String.html\">String</a>, min_length : <a href=\"../Int.html\">Int</a> = <span class=\"n\">4</span>) : Array(Tuple(<a href=\"../String.html\">String</a>, Int32))","location":{"filename":"src/chars/char_set.cr","line_number":347,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L347"},"def":{"name":"substrings_with_indexes","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"},{"name":"min_length","doc":null,"default_value":"4","external_name":"min_length","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Tuple(String, Int32))","visibility":"Public","body":"array = [] of Tuple(String, Int32)\neach_substring_with_index(data, min_length) do |substring, index|\n  array << {substring, index}\nend\nreturn array\n"}},{"id":"to_a(*args,**options)-instance-method","html_id":"to_a(*args,**options)-instance-method","name":"to_a","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/chars/char_set.cr","line_number":452,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L452"},"def":{"name":"to_a","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_set.to_a(*args, **options)"}},{"id":"to_a(*args,**options,&)-instance-method","html_id":"to_a(*args,**options,&)-instance-method","name":"to_a","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/chars/char_set.cr","line_number":452,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L452"},"def":{"name":"to_a","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_set.to_a(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"to_set(*args,**options)-instance-method","html_id":"to_set(*args,**options)-instance-method","name":"to_set","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/chars/char_set.cr","line_number":453,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L453"},"def":{"name":"to_set","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_set.to_set(*args, **options)"}},{"id":"to_set(*args,**options,&)-instance-method","html_id":"to_set(*args,**options,&)-instance-method","name":"to_set","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/chars/char_set.cr","line_number":453,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L453"},"def":{"name":"to_set","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_set.to_set(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"|(other:CharSet):CharSet-instance-method","html_id":"|(other:CharSet):CharSet-instance-method","name":"|","doc":"\nUnions the `CharSet` with another `CharSet`, returning a new `CharSet`.\n","summary":"<p>Unions the <code><a href=\"../Chars/CharSet.html\">CharSet</a></code> with another <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>, returning a new <code><a href=\"../Chars/CharSet.html\">CharSet</a></code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"args_string":"(other : CharSet) : CharSet","args_html":"(other : <a href=\"../Chars/CharSet.html\">CharSet</a>) : <a href=\"../Chars/CharSet.html\">CharSet</a>","location":{"filename":"src/chars/char_set.cr","line_number":384,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/char_set.cr#L384"},"def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"CharSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CharSet","visibility":"Public","body":"CharSet.new(@char_set | (other.@char_set))"}}],"macros":[],"types":[]}]},{"html_id":"chars/Int","path":"Int.html","kind":"struct","full_name":"Int","name":"Int","abstract":true,"superclass":{"html_id":"chars/Number","kind":"struct","full_name":"Number","name":"Number"},"ancestors":[{"html_id":"chars/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"chars/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"chars/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"chars/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/chars/core_ext/int.cr","line_number":3,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L3"}],"repository_name":"chars","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Int is the base type of all integer types.\n\nThere are four signed integer types: `Int8`, `Int16`, `Int32` and `Int64`,\nbeing able to represent numbers of 8, 16, 32 and 64 bits respectively.\nThere are four unsigned integer types: `UInt8`, `UInt16`, `UInt32` and `UInt64`.\n\nAn integer literal is an optional `+` or `-` sign, followed by\na sequence of digits and underscores, optionally followed by a suffix.\nIf no suffix is present, the literal's type is the lowest between `Int32`, `Int64` and `UInt64`\nin which the number fits:\n\n```\n1 # Int32\n\n1_i8  # Int8\n1_i16 # Int16\n1_i32 # Int32\n1_i64 # Int64\n\n1_u8  # UInt8\n1_u16 # UInt16\n1_u32 # UInt32\n1_u64 # UInt64\n\n+10 # Int32\n-20 # Int32\n\n2147483648          # Int64\n9223372036854775808 # UInt64\n```\n\nThe underscore `_` before the suffix is optional.\n\nUnderscores can be used to make some numbers more readable:\n\n```\n1_000_000 # better than 1000000\n```\n\nBinary numbers start with `0b`:\n\n```\n0b1101 # == 13\n```\n\nOctal numbers start with `0o`:\n\n```\n0o123 # == 83\n```\n\nHexadecimal numbers start with `0x`:\n\n```\n0xFE012D # == 16646445\n0xfe012d # == 16646445\n```","summary":"<p>Int is the base type of all integer types.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"alpha?-instance-method","html_id":"alpha?-instance-method","name":"alpha?","doc":"\nDetermines if the byte belongs to the alphabetic character set.\n\nSee `Chars::ALPHA` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the alphabetic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":77,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L77"},"def":{"name":"alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::ALPHA.includes_byte?(self)"}},{"id":"alpha_numeric?-instance-method","html_id":"alpha_numeric?-instance-method","name":"alpha_numeric?","doc":"\nDetermines if the byte belongs to the alpha-numeric character set.\n\nSee `Chars::ALPHA_NUMERIC` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the alpha-numeric character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":86,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L86"},"def":{"name":"alpha_numeric?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::ALPHA_NUMERIC.includes_byte?(self)"}},{"id":"ascii?-instance-method","html_id":"ascii?-instance-method","name":"ascii?","doc":"\nDetermines if the byte belongs to the ASCII character set.\n\nSee `Chars::ASCII` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the ASCII character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":158,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L158"},"def":{"name":"ascii?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::ASCII.includes_byte?(self)"}},{"id":"control?-instance-method","html_id":"control?-instance-method","name":"control?","doc":"\nDetermines if the byte belongs to the control-character character set.\n\nSee `Chars::CONTROL` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the control-character character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":140,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L140"},"def":{"name":"control?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::CONTROL.includes_byte?(self)"}},{"id":"hex?-instance-method","html_id":"hex?-instance-method","name":"hex?","doc":"\nDetermines if the byte belongs to the hexadecimal character set.\n\nSee `Chars::HEXADECIMAL` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the hexadecimal character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":48,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L48"},"def":{"name":"hex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::HEXADECIMAL.includes_byte?(self)"}},{"id":"lowercase_alpha?-instance-method","html_id":"lowercase_alpha?-instance-method","name":"lowercase_alpha?","doc":"\nDetermines if the byte belongs to the lower-case alphabetic character\nset.\n\nSee `Chars::LOWERCASE_ALPHA` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the lower-case alphabetic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":68,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L68"},"def":{"name":"lowercase_alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::LOWERCASE_ALPHA.includes_byte?(self)"}},{"id":"lowercase_hex?-instance-method","html_id":"lowercase_hex?-instance-method","name":"lowercase_hex?","doc":"\nDetermines if the byte belongs to the lower-case hexadecimal character\nset.\n\nSee `Chars::LOWERCASE_HEXADECIMAL` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the lower-case hexadecimal character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":39,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L39"},"def":{"name":"lowercase_hex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::LOWERCASE_HEXADECIMAL.includes_byte?(self)"}},{"id":"numeric?-instance-method","html_id":"numeric?-instance-method","name":"numeric?","doc":"\nDetermines if the byte belongs to the decimal-digit character set.\n\nSee `Chars::NUMERIC` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the decimal-digit character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":10,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L10"},"def":{"name":"numeric?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::NUMERIC.includes_byte?(self)"}},{"id":"octal?-instance-method","html_id":"octal?-instance-method","name":"octal?","doc":"\nDetermines if the byte belongs to the octal-digit character set.\n\nSee `Chars::OCTAL` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the octal-digit character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":19,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L19"},"def":{"name":"octal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::OCTAL.includes_byte?(self)"}},{"id":"printable?-instance-method","html_id":"printable?-instance-method","name":"printable?","doc":"\nDetermines if the byte belongs to the printable character set.\n\nSee `Chars::PRINTABLE` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the printable character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":131,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L131"},"def":{"name":"printable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::PRINTABLE.includes_byte?(self)"}},{"id":"punctuation?-instance-method","html_id":"punctuation?-instance-method","name":"punctuation?","doc":"\nDetermines if the byte belongs to the punctuation character set.\n\nSee `Chars::PUNCTUATION` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the punctuation character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":95,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L95"},"def":{"name":"punctuation?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::PUNCTUATION.includes_byte?(self)"}},{"id":"signed_ascii?-instance-method","html_id":"signed_ascii?-instance-method","name":"signed_ascii?","doc":"\nDetermines if the byte belongs to the signed-ASCII character set.\n\nSee `Chars::SIGNED_ASCII` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the signed-ASCII character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":149,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L149"},"def":{"name":"signed_ascii?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::SIGNED_ASCII.includes_byte?(self)"}},{"id":"space?-instance-method","html_id":"space?-instance-method","name":"space?","doc":"\nDetermines if the byte belongs to the white-space character set.\n\nSee `Chars::SPACE` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the white-space character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":113,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L113"},"def":{"name":"space?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::SPACE.includes_byte?(self)"}},{"id":"symbolic?-instance-method","html_id":"symbolic?-instance-method","name":"symbolic?","doc":"\nDetermines if the byte belongs to the symbolic character set.\n\nSee `Chars::SYMBOLS` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the symbolic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":104,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L104"},"def":{"name":"symbolic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::SYMBOLS.includes_byte?(self)"}},{"id":"uppercase_alpha?-instance-method","html_id":"uppercase_alpha?-instance-method","name":"uppercase_alpha?","doc":"\nDetermines if the byte belongs to the upper-case alphabetic character\nset.\n\nSee `Chars::UPPERCASE_ALPHA` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the upper-case alphabetic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":58,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L58"},"def":{"name":"uppercase_alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::UPPERCASE_ALPHA.includes_byte?(self)"}},{"id":"uppercase_hex?-instance-method","html_id":"uppercase_hex?-instance-method","name":"uppercase_hex?","doc":"\nDetermines if the byte belongs to the upper-case hexadecimal character\nset.\n\nSee `Chars::UPPERCASE_HEXADECIMAL` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the upper-case hexadecimal character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":29,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L29"},"def":{"name":"uppercase_hex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::UPPERCASE_HEXADECIMAL.includes_byte?(self)"}},{"id":"visible?-instance-method","html_id":"visible?-instance-method","name":"visible?","doc":"\nDetermines if the byte belongs to the visible character set.\n\nSee `Chars::VISIBLE` and `Chars::CharSet#===`.\n","summary":"<p>Determines if the byte belongs to the visible character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/int.cr","line_number":122,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/int.cr#L122"},"def":{"name":"visible?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::VISIBLE.includes_byte?(self)"}}],"macros":[],"types":[]},{"html_id":"chars/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"chars/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"chars/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"chars/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"chars/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/chars/core_ext/string.cr","line_number":3,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L3"}],"repository_name":"chars","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"chars/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nString might end up being conformed of bytes which are an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but\ninvalid byte sequences, when asked as chars, will use the unicode replacement\nchar (value 0xFFFD). For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['�', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"alpha?-instance-method","html_id":"alpha?-instance-method","name":"alpha?","doc":"\nDetermines whether the String belongs to the alphabetic character set.\n\nSee `Chars::ALPHA` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the alphabetic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":77,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L77"},"def":{"name":"alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::ALPHA === self"}},{"id":"alpha_numeric?-instance-method","html_id":"alpha_numeric?-instance-method","name":"alpha_numeric?","doc":"\nDetermines whether the String belongs to the alpha-numeric character\nset.\n\nSee `Chars::ALPHA_NUMERIC` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the alpha-numeric character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":87,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L87"},"def":{"name":"alpha_numeric?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::ALPHA_NUMERIC === self"}},{"id":"ascii?-instance-method","html_id":"ascii?-instance-method","name":"ascii?","doc":"\nDetermines whether the String belongs to the ASCII character set.\n\nSee `Chars::ASCII` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the ASCII character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":160,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L160"},"def":{"name":"ascii?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::ASCII === self"}},{"id":"control?-instance-method","html_id":"control?-instance-method","name":"control?","doc":"\nDetermines whether the String belongs to the control-character\ncharacter set.\n\nSee `Chars::CONTROL` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the control-character character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":142,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L142"},"def":{"name":"control?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::CONTROL === self"}},{"id":"hex?-instance-method","html_id":"hex?-instance-method","name":"hex?","doc":"\nDetermines whether the String belongs to the hexadecimal character set.\n\nSee `Chars::HEXADECIMAL` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the hexadecimal character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":48,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L48"},"def":{"name":"hex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::HEXADECIMAL === self"}},{"id":"lowercase_alpha?-instance-method","html_id":"lowercase_alpha?-instance-method","name":"lowercase_alpha?","doc":"\nDetermines whether the String belongs to the lower-case alphabetic\ncharacter set.\n\nSee `Chars::LOWERCASE_ALPHA` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the lower-case alphabetic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":68,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L68"},"def":{"name":"lowercase_alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::LOWERCASE_ALPHA === self"}},{"id":"lowercase_hex?-instance-method","html_id":"lowercase_hex?-instance-method","name":"lowercase_hex?","doc":"\nDetermines whether the String belongs to the lower-case hexadecimal\ncharacter set.\n\nSee `Chars::LOWERCASE_HEXADECIMAL` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the lower-case hexadecimal character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":39,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L39"},"def":{"name":"lowercase_hex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::LOWERCASE_HEXADECIMAL === self"}},{"id":"numeric?-instance-method","html_id":"numeric?-instance-method","name":"numeric?","doc":"\nDetermines whether the String belongs to the decimal-digit character set.\n\nSee `Chars::NUMERIC` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the decimal-digit character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":10,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L10"},"def":{"name":"numeric?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::NUMERIC === self"}},{"id":"octal?-instance-method","html_id":"octal?-instance-method","name":"octal?","doc":"\nDetermines whether the String belongs to the octal-digit character set.\n\nSee `Chars::OCTAL` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the octal-digit character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":19,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L19"},"def":{"name":"octal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::OCTAL === self"}},{"id":"printable?-instance-method","html_id":"printable?-instance-method","name":"printable?","doc":"\nDetermines whether the String belongs to the printable character set.\n\nSee `Chars::PRINTABLE` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the printable character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":132,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L132"},"def":{"name":"printable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::PRINTABLE === self"}},{"id":"punctuation?-instance-method","html_id":"punctuation?-instance-method","name":"punctuation?","doc":"\nDetermines whether the String belongs to the punctuation character set.\n\nSee `Chars::PUNCTUATION` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the punctuation character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":96,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L96"},"def":{"name":"punctuation?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::PUNCTUATION === self"}},{"id":"signed_ascii?-instance-method","html_id":"signed_ascii?-instance-method","name":"signed_ascii?","doc":"\nDetermines whether the String belongs to the signed-ASCII character set.\n\nSee `Chars::SIGNED_ASCII` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the signed-ASCII character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":151,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L151"},"def":{"name":"signed_ascii?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::SIGNED_ASCII === self"}},{"id":"space?-instance-method","html_id":"space?-instance-method","name":"space?","doc":"\nDetermines whether the String belongs to the white-space character set.\n\nSee `Chars::SPACE` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the white-space character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":114,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L114"},"def":{"name":"space?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::SPACE === self"}},{"id":"symbolic?-instance-method","html_id":"symbolic?-instance-method","name":"symbolic?","doc":"\nDetermines whether the String belongs to the symbolic character set.\n\nSee `Chars::SYMBOLS` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the symbolic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":105,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L105"},"def":{"name":"symbolic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::SYMBOLS === self"}},{"id":"uppercase_alpha?-instance-method","html_id":"uppercase_alpha?-instance-method","name":"uppercase_alpha?","doc":"\nDetermines whether the String belongs to the upper-case alphabetic\ncharacter set.\n\nSee `Chars::UPPERCASE_ALPHA` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the upper-case alphabetic character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":58,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L58"},"def":{"name":"uppercase_alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::UPPERCASE_ALPHA === self"}},{"id":"uppercase_hex?-instance-method","html_id":"uppercase_hex?-instance-method","name":"uppercase_hex?","doc":"\nDetermines whether the String belongs to the upper-case hexadecimal\ncharacter set.\n\nSee `Chars::UPPERCASE_HEXADECIMAL` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the upper-case hexadecimal character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":29,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L29"},"def":{"name":"uppercase_hex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::UPPERCASE_HEXADECIMAL === self"}},{"id":"visible?-instance-method","html_id":"visible?-instance-method","name":"visible?","doc":"\nDetermines whether the String belongs to the visible character set.\n\nSee `Chars::VISIBLE` and `Chars::CharSet#===`.\n","summary":"<p>Determines whether the String belongs to the visible character set.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/chars/core_ext/string.cr","line_number":123,"url":"https://github.com/postmodern/chars.cr/blob/v0.1.0/src/chars/core_ext/string.cr#L123"},"def":{"name":"visible?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Chars::VISIBLE === self"}}],"macros":[],"types":[]}]}}